@inject IJSRuntime JSRuntime 
@inject NavigationManager NavigationManager 

<div class="input-group">
    <input @ref="InputRef" 
           class="@CssClass" 
           @bind="Link" 
           @onkeydown="HandleKeyDown" 
           placeholder="@placeholder" />
    <button class="btn btn-outline-light" @onclick="LaunchAsync">↩️</button>
</div>

@code {
    private ElementReference InputRef; // Referenz auf das Input-Feld! 🆗 

    [Parameter]
    public string CssClass { get; set; } = "form-control input-lg"; // CSS-Klasse für das Input-Feld 🎨

    [Parameter]
    public string placeholder { get; set; } // Platzhalter-Text im Input ✍️

    public string Link { get; set; } // Link/ID für das Video 📺🎥

    private async Task LaunchAsync() // Methode zum Navigieren auf die Video-Seite! 🚀
    {
        NavigationManager.NavigateTo($"/watch?v={Link.Substring(Link.Length - 11)}");
        StateHasChanged(); // Aktualisiere den Status, falls nötig! 🔄
    }

    private async Task HandleKeyDown(KeyboardEventArgs e) // Handle die Tasteneingabe! ⌨️
    {
        if (e.Key == "Enter") // Wenn die Enter-Taste gedrückt wird! 🎉
        {
            await JSRuntime.InvokeVoidAsync("blurElement", InputRef); // Input-Feld verliert den Fokus! ✨
            await LaunchAsync(); // Führe die Launch-Methode aus! 🔥
        }
    }
}